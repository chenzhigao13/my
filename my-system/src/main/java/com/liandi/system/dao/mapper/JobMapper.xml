<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liandi.system.dao.JobMapper">

    <resultMap id="jobMap" type="com.liandi.system.dao.domain.JobDO">
        <id column="id" property="id"/>
        <result column="job_name" property="jobName"/>
        <result column="group_name" property="groupName"/>
        <result column="cron" property="cron"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="bean_name" property="beanName"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="countJob" resultType="java.lang.Integer"
            parameterType="com.liandi.system.dao.param.ListPageJobParam">
        select count(t.id) from scheduler_job t
        <where>
            <if test="status != null and status != ''">and t.status = #{status}</if>
            <if test="jobName != null and jobName != ''">and t.job_name like '%'||#{jobName}||'%'</if>
            <if test="groupName != null and groupName != ''">and t.group_name like '%'||#{groupName}||'%'</if>
            <if test="beanName != null and beanName != ''">and t.bean_name like '%'||#{beanName}||'%'</if>
        </where>
    </select>

    <select id="listPageJob" resultMap="jobMap"
            parameterType="com.liandi.system.dao.param.ListPageJobParam">
        select t.id, t.job_name, t.group_name, t.cron, t.description, t.status, t.bean_name, t.create_time from
        scheduler_job t
        <where>
            <if test="status != null and status != ''">and t.status = #{status}</if>
            <if test="jobName != null and jobName != ''">and t.job_name like '%'||#{jobName}||'%'</if>
            <if test="groupName != null and groupName != ''">and t.group_name like '%'||#{groupName}||'%'</if>
            <if test="beanName != null and beanName != ''">and t.bean_name like '%'||#{beanName}||'%'</if>
        </where>
        order by t.create_time desc
        limit #{startSize}, #{pageSize}
    </select>

</mapper>